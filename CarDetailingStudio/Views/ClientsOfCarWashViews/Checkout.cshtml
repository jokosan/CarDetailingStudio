@model IEnumerable<CarDetailingStudio.Models.ModelViews.ClientsOfCarWashView>

<link href="~/Content/MvcGrid/mvc-grid.css" rel="stylesheet" />
<link href="~/Content/form.css" rel="stylesheet" />
<link href="~/Content/input.css" rel="stylesheet" />

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <h5 class="card-title m-b-0">Оформление заказа</h5>
                    </div>

                    <div class="col-md-6 text-right">
                        @Html.ActionLink("Создать нового клиента", "../Client/NewClient", new { idPage = "Checkout" }, new { @class = "btn btn-cyan btn-sm" })
                    </div>
                </div>
            </div>
        </div>


        <div class="card">
            <div class="card-body">
                <div class="table-responsive">

                    @switch (ViewBag.Service)
                    {
                        case 1:
                            @(Html
                           .Grid(Model)
                           .Build(columns =>
                           {
                           columns.Add(model => model.ClientInfo.Surname).Titled("Фамилия");
                           columns.Add(model => model.ClientInfo.Name).Titled("Имя");
                           columns.Add(model => model.ClientInfo.PatronymicName).Titled("Отчество");

                           columns.Add(model => model.ClientInfo.DateRegistration).Titled("Дата регистрации");
                           columns.Add(model => model.discont).Titled("% Скидки");
                           columns.Add(model => model.NumberCar).Titled("Номер машины").Sortable(false);
                           columns.Add(model => model.ClientsGroups.Name).Titled("Группа");
                           columns.Add(model => model.car_mark.name).Titled("Марка");
                           columns.Add(model => model.car_model.name).Titled("Модель");

                           columns.Add(model => @Html.ActionLink("Edit", "EditCarClient", new { id = model.id }, new { @class = "btn btn-cyan btn-sm" })).Encoded(false);
                           columns.Add(model => @Html.ActionLink("Детейлинг", "NewOrder", new { id = model.id, body = model.CarBody.Name, Services = 1 }, new { @class = "btn btn-warning btn-sm" })).Encoded(false);
                           columns.Add(model => @Html.ActionLink("Мойка", "NewOrder", new { id = model.id, body = model.CarBody.Name, Services = 2 }, new { @class = "btn btn-warning btn-sm" })).Encoded(false);
                            })
                           .UsingFilterMode(GridFilterMode.Excel)
                           .Empty("No data found")
                           .Filterable(GridFilterType.Single)
                           .Sortable()
                           .Pageable(pager =>
                           {
                               pager.PageSizes = new Dictionary<int, string> { { 10, "10" }, { 25, "25" }, { 50, "50" }, { 100, "100" }, { 200, "200" }, { 300, "300" }, { 500, "500" } };
                               pager.ShowPageSizes = true;
                               pager.RowsPerPage = 1;
                           })
                            )
                            break;
                        case 2:
                            @(Html
                          .Grid(Model)
                          .Build(columns =>
                          {
                          columns.Add(model => model.ClientInfo.Surname).Titled("Фамилия");
                          columns.Add(model => model.ClientInfo.Name).Titled("Имя");
                          columns.Add(model => model.ClientInfo.PatronymicName).Titled("Отчество");

                          columns.Add(model => model.ClientInfo.DateRegistration).Titled("Дата регистрации");
                          columns.Add(model => model.discont).Titled("% Скидки");
                          columns.Add(model => model.NumberCar).Titled("Номер машины").Sortable(false);
                          columns.Add(model => model.ClientsGroups.Name).Titled("Группа");
                          columns.Add(model => model.car_mark.name).Titled("Марка");
                          columns.Add(model => model.car_model.name).Titled("Модель");

                          columns.Add(model => @Html.ActionLink("Edit", "EditCarClient", new { id = model.id }, new { @class = "btn btn-cyan btn-sm" })).Encoded(false);
                          columns.Add(model => @Html.ActionLink("Оформить заказ", "CreateTireStorageOrder", "TireStorage", new { IdClient = model.id }, new { @class = "btn btn-success btn-sm" })).Encoded(false);
                           })
                          .UsingFilterMode(GridFilterMode.Excel)
                          .Empty("No data found")
                          .Filterable(GridFilterType.Single)
                          .Sortable()
                          .Pageable(pager =>
                          {
                              pager.PageSizes = new Dictionary<int, string> { { 10, "10" }, { 25, "25" }, { 50, "50" }, { 100, "100" }, { 200, "200" }, { 300, "300" }, { 500, "500" } };
                              pager.ShowPageSizes = true;
                              pager.RowsPerPage = 1;
                          })
                            )
                            break;
                    }

                </div>
            </div>
        </div>
        
    </div>

</div>

<script src="~/Scripts/MvcGrid/mvc-grid.js"></script>
<script>
    [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
        new MvcGrid(element);
    });
</script>
<script src="~/Scripts/MvcGrid/mvc-grid-localizing.js"></script>
<script src="~/Scripts/MvcGrid/mvc-grid-localizing.js"></script>