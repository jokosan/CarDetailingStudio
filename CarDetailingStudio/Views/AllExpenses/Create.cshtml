@model CarDetailingStudio.Models.AllExpenses
<div class="row">
    <div class="col-md-8 offset-md-2">
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <h5 class="card-title m-b-0 result">Добавить к расходам </h5>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="row">
    <div class="col-md-8 offset-md-2">
        <div class="card">
            <div class="card-body">
                <hr />
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group row">
                            <label for="cono1" class="col-sm-3 text-right control-label col-form-label">
                                @Html.LabelFor(model => model.expenseCategoryId)
                            </label>
                            <div class="col-md-8">
                                @Html.DropDownList("SelectGroupClient", (SelectList)ViewBag.Category, "Выберите значение", new { @class = "form-control", @id = "purpose" })
                               @* @Html.DropDownList("Test", ViewBag.CostCategory as SelectList, new { @id = "test" })*@
                            </div>
                        </div>


                        <div id="waste">
                            <div style='display:none' class="form-group row" id="indicationCounter">
                                <label for="cono1" class="col-sm-3 text-right control-label col-form-label">
                                    @Html.LabelFor(model => model.indicationCounter)
                                </label>
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.indicationCounter, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.indicationCounter, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                <label for="cono1" class="col-sm-3 text-right control-label col-form-label">
                                    @Html.LabelFor(model => model.amount)
                                </label>
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.amount, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.amount, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                <label for="cono1" class="col-sm-3 text-right control-label col-form-label">
                                    @Html.LabelFor(model => model.dateExpenses)
                                </label>
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.dateExpenses, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.dateExpenses, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                <label for="cono1" class="col-sm-3 text-right control-label col-form-label">
                                    @Html.LabelFor(model => model.nameExpenses)
                                </label>
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.nameExpenses, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.nameExpenses, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div style='display:none' class="form-group row" id="typeServicesId">
                                <label for="cono1" class="col-sm-3 text-right control-label col-form-label">
                                    @Html.LabelFor(model => model.typeServicesId)
                                </label>
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.typeServicesId, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.typeServicesId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div style='display:none' class="form-group row" id="utilityCostsCategory">
                                <label for="cono1" class="col-sm-3 text-right control-label col-form-label">
                                    @Html.LabelFor(model => model.expenseCategoryId)
                                </label>
                                <div class="col-md-8">
                                    @Html.DropDownList("UtilityCostsCategory", (SelectList)ViewBag.UtilityCostsCategory, "Выберите значение", new { @class = "form-control" })
                                </div>
                            </div>


                            <hr />
                            <div class="form-group">
                                <div class="pull-right m-t-30 text-right">
                                    <input type="submit" value="Сохранить" class="btn btn-default" />
                                    @Html.ActionLink("На страницу заказы", "Index", null, new { @class = "btn btn-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('#purpose').on('change', function () {

            if (this.value == '5') {
                $("#indicationCounter").show();
                $("#utilityCostsCategory").show();
            }
            else if (this.value != '5') {
                $("#indicationCounter").hide();
                $("#utilityCostsCategory").hide();
            }

            if (this.value == '2') {
                $("#typeServicesId").show();
            }
            else if (this.value != '2') {
                $("#typeServicesId").hide();
            }
        });
    });

    $(document).ready(function () {
        $('#purpose').on('change', function () {

            var val1 = $("#purpose option:selected").text();
            $(".result")
                .html(val1);

        });
    });

      @*$(function () {

          $('#purpose').change(function()
        {
            // получаем выбранный id
            var id = $(this).val();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetItems")/' + id,
                success: function (data) {

                    // заменяем содержимое присланным частичным представлением
                    $('#test').replaceWith(data);
                }
            });
        });
      })*@

</script>

