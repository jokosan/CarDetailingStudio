@model CarDetailingStudio.Models.AllExpenses
<link href="~/Content/input.css" rel="stylesheet" />
<link href="~/Content/css/select2.css" rel="stylesheet" />
<script src="~/Scripts/select2.min.js"></script>
<link href="~/Content/jquery-ui.css" rel="stylesheet" />

<div class="row">
    <div class="col-md-8 offset-md-2">
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <h5 class="card-title m-b-0 result">Добавить к расходам </h5>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="row">
    <div class="col-md-8 offset-md-2">
        <div class="card">
            <div class="card-body">
                <hr />
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group row">
                            <label class="col-sm-3 text-right control-label col-form-label">
                                Выбирите категорию расходов
                            </label>
                            <div class="col-md-8">

                                <input type="hidden" class="CountryId" id="CarMark" />
                                <select class="MarkCar form-control" id="purpose">
                                </select>
                            </div>
                        </div>

                        <div class="form-group row">
                            <label class="col-sm-3 text-right control-label col-form-label">
                                Тип расходов
                            </label>
                            <div class="col-md-8">
                                <input type="hidden" id="CarModelResult" />
                                <select class="State form-control" id="mySelect2" border-radius:5px;">
                                    <option>Тип расходов</option>
                                </select>
                            </div>
                        </div>

                        <div id="waste">
                            <div style='display:none' class="form-group row" id="indicationCounter">
                                <label for="cono1" class="col-sm-3 text-right control-label col-form-label">
                                    @Html.LabelFor(model => model.indicationCounter)
                                </label>
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.indicationCounter, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.indicationCounter, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                <label for="cono1" class="col-sm-3 text-right control-label col-form-label">
                                    @Html.LabelFor(model => model.amount)
                                </label>
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.amount, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.amount, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                <label for="cono1" class="col-sm-3 text-right control-label col-form-label">
                                    @Html.LabelFor(model => model.dateExpenses)
                                </label>
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.dateExpenses, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.dateExpenses, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                <label for="cono1" class="col-sm-3 text-right control-label col-form-label">
                                    @Html.LabelFor(model => model.nameExpenses)
                                </label>
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.nameExpenses, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.nameExpenses, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                <label for="cono1" class="col-sm-3 text-right control-label col-form-label">
                                     @Html.LabelFor(model => model.paymentType)
                                </label>
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.paymentType, new List<SelectListItem>
                                       {
                                           new SelectListItem{ Text = "Выберите форму оплаты", Value = "3"},
                                           new SelectListItem { Text = "Наличный расчёт", Value = "1"},
                                           new SelectListItem{ Text = "Безналичный расчёт", Value = "2"},
                                       }, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.paymentType, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div style='display:none' class="form-group row" id="typeServicesId">
                                <label for="cono1" class="col-sm-3 text-right control-label col-form-label">
                                    @Html.LabelFor(model => model.typeServicesId)
                                </label>
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.typeServicesId, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.typeServicesId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <hr />
                            <div class="form-group">
                                <div class="pull-right m-t-30 text-right">
                                    <input type="submit" value="Сохранить" class="btn btn-default" onclick="this.disabled=true; this.value='Отправка, подождите ...'; this.form.submit();" />
                                    @Html.ActionLink("На страницу заказы", "Index", null, new { @class = "btn btn-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        $(".MarkCar").select2({
            placeholder: "Выберите категорию расходов",
            theme: "classic",
            ajax: {
                url: "/AllExpenses/GetCountryList",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data, params) {
                    return {
                        results: data
                    };
                }
            }
        });
    });

    $(".MarkCar").on("change", function () {
        var CounrtyID = $(this).val();
        $(".CountryId").val(CounrtyID);
        var textBoxVal = $(".CountryId").val();
        $.ajax({
            url: "/AllExpenses/GetStateList?CountryIDs=" + textBoxVal,
            dataType: 'json',
            type: 'post',
            success: function (data) {
                $(".State").empty();
                $.each(data, function (index, row) {
                    $(".State").append("<option value='" + row.idCostCategories + "'>" + row.Name + "</option>")
                });
            }
        });
    });

    $(".State").on("change", function () {
        var catId = $(this).val();
        $("#CarModelResult").val(catId);

        var textBoxValueData = $("#CarModelResult").val();

        $.ajax({
            url: '/AllExpenses/Save?data=' + textBoxValueData,
            dataType: "json",
            type: 'post',

        });
    });
</script>


<script>
    $(document).ready(function () {
        $('#purpose').on('change', function () {

            if (this.value == '5') {
                $("#indicationCounter").show();
                $("#utilityCostsCategory").show();
            }
            else if (this.value != '5') {
                $("#indicationCounter").hide();
                $("#utilityCostsCategory").hide();
            }

            if (this.value == '2') {
                $("#typeServicesId").show();
            }
            else if (this.value != '2') {
                $("#typeServicesId").hide();
            }
        });
    });

    $(document).ready(function () {
        $('#purpose').on('change', function () {

            var val1 = $("#purpose option:selected").text();
            $(".result")
                .html(val1);

        });
    });

      $(function () {

          $('#purpose').change(function()
        {
            // получаем выбранный id
            var id = $(this).val();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetItems")/' + id,
                success: function (data) {

                    // заменяем содержимое присланным частичным представлением
                    $('#test').replaceWith(data);
                    $('#test').load('@Url.Action("GetItems")'); // clear up the city drop down list as no state is selected
                }
            });
        });
      })

</script>

