@model CarDetailingStudio.Models.ModelViews.TireServiceView

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>TireServiceView</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.clientsOfCarWashId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.clientsOfCarWashId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.clientsOfCarWashId, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.orderServicesCarWashId, "orderServicesCarWashId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("orderServicesCarWashId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.orderServicesCarWashId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.priceListTireFittingAdditionalServicesId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.priceListTireFittingAdditionalServicesId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.priceListTireFittingAdditionalServicesId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.numberOfTires, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.numberOfTires, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.numberOfTires, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tireRadius, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.tireRadius, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tireRadius, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.priceTireFitting, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.priceTireFitting, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.priceTireFitting, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
