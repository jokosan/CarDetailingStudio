@model IEnumerable<CarDetailingStudio.Models.ModelViews.CostsCarWashAndDeteylingView>
<link href="~/Content/MvcGrid/mvc-grid.css" rel="stylesheet" />
<link href="~/Content/form.css" rel="stylesheet" />

<div class="row">
    <div class="col-12">
        <div class="card">

            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <h5 class="card-title m-b-0">Расходы мойка и детейлинг</h5>
                    </div>
                    <div class="col-md-6">
                        <div class="pull-right m-t-30 text-right">
                            @Html.ActionLink("Добавить", "Create", null, new { @class = "btn btn-info" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="card-body">
                <div class="table-responsive">

                    @(Html
                           .Grid(Model)
                           .Build(columns =>
                           {

                               columns.Add(model => model.nameExpenses);
                               columns.Add(model => model.amount);
                               columns.Add(model => model.dateExpenses);
                               columns.Add(model => model.expenseCategory.name);
                               columns.Add(model => model.typeServicesId);
                               columns.Add(model => model.dateExpenses);
                               columns.Add(model => model.expenseCategory.name);
                               columns.Add(model => @Html.ActionLink("Edit", "Edit", new { id = model.idCostsCarWashAndDeteyling })).Encoded(false);
                               columns.Add(model => @Html.ActionLink("Details", "Details", new { id = model.idCostsCarWashAndDeteyling })).Encoded(false);
                               columns.Add(model => @Html.ActionLink("Delete", "Delete", new { id = model.idCostsCarWashAndDeteyling })).Encoded(false);
                           })
                           .UsingFilterMode(GridFilterMode.Excel)
                           .Empty("No data found")
                           .Filterable(GridFilterType.Single)
                           .Sortable()
                           .Pageable(pager =>
                           {
                               pager.PageSizes = new Dictionary<int, string> { { 10, "10" }, { 25, "25" }, { 50, "50" }, { 100, "100" }, { 200, "200" }, { 300, "300" }, { 500, "500" } };
                               pager.ShowPageSizes = true;
                               pager.RowsPerPage = 1;
                           })
                         )
                </div>
            </div>
        </div>
    </div>
</div>


<script src="~/Scripts/MvcGrid/mvc-grid.js"></script>
<script>
    [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
        new MvcGrid(element);
    });
</script>
<script src="~/Scripts/MvcGrid/mvc-grid-localizing.js"></script>
<script src="~/Scripts/MvcGrid/mvc-grid-localizing.js"></script>